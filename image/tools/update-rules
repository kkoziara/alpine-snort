#! /bin/sh
#
# Wrapper script around pulledpork to update rules.

PULLEDPORK_CONF=/data/etc/snort/pulledpork.conf
ENABLESID_CONF=/data/etc/snort/enablesid.conf
DISABLESID_CONF=/data/etc/snort/disablesid.conf
DROPSID_CONF=/data/etc/snort/dropsid.conf
MODIFYSID_CONF=/data/etc/snort/modifysid.conf

BLACKLIST_URL="http://labs.snort.org/feeds/ip-filter.blf"

VRT_RULE_URL="https://www.snort.org/rules/|snortrules-snapshot.tar.gz"
ET_OPEN_RULE_URL="https://rules.emergingthreatspro.com/|emerging.rules.tar.gz"

PP_ARGS="/opt/pulledpork/pulledpork.pl -c ${PULLEDPORK_CONF} -P"
PP_ARGS="${PP_ARGS} -u ${BLACKLIST_URL}|IPBLACKLIST|open"

check_for_file() {
    echo -n "Checking for file $1: "
    if [ -e "$1" ]; then
	echo "found."
	return 0
    else
	echo "not found."
	return 1
    fi
}

if [ ! "${OINKCODE}" ]; then
    echo "warning: OINKCODE variable not set: using ET open rules."
    RULE_URL=${ET_OPEN_RULE_URL}
    OINKCODE="open"
else
    RULE_URL=${VRT_RULE_URL}
fi
PP_ARGS="${PP_ARGS} -u ${RULE_URL}|${OINKCODE}"

if check_for_file ${ENABLESID_CONF}; then
    PP_ARGS="${PP_ARGS} -e ${ENABLESID_CONF}"
fi

if check_for_file ${DISABLESID_CONF}; then
    PP_ARGS="${PP_ARGS} -i ${DISABLESID_CONF}"
fi

if check_for_file ${DROPSID_CONF}; then
    PP_ARGS="${PP_ARGS} -b ${DROPSID_CONF}"
fi

if check_for_file ${MODIFYSID_CONF}; then
    PP_ARGS="${PP_ARGS} -M ${MODIFYSID_CONF}"
fi

echo "Running ${PP_ARGS}."
${PP_ARGS}
